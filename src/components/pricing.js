import React from "react";
import { useNavigate } from "react-router-dom";
import '../css/pricing.css'; // Import the CSS file

const Pricing = () => {
  const navigate = useNavigate();

  function handleContactClick() {
    navigate("/contact", { state: { scrollTo: "contact" } });
  }

  return (
    <section className="pricing-section" id="pricing">
      {/* Pricing Tag */}
      <div className="pricing-tag">Pricing</div>

      {/* Main Heading */}
      <h2 className="pricing-heading">
        The Best Leads,<br /> at the Right Price
      </h2>

      {/* Sub Heading */}
      <p className="pricing-subheading">
        Choose a plan that fits your business needs and begin your growth ramp.
      </p>

      {/* Pricing Cards */}
      <div className="pricing-cards">
        {/* Starter Plan */}
        <div className="pricing-card">
          <div className="card-header">
            <StarterLogo />
            <span className="plan-name">Starter</span>
          </div>
          <p className="plan-desc">Perfect for startups building brand awareness.</p>
          <button className="choose-plan" onClick={handleContactClick}>Choose this plan</button>
          <p className="included-title">What's included:</p>
          <ul className="features-list">
            <li><CheckIcon /> 800-1,000 targeted emails</li>
            <li><CheckIcon /> Affordable brand visibility boost</li>
            <li><CheckIcon /> Easy setup for small businesses</li>
            <li><CheckIcon /> Branded email templates</li>
            <li><CheckIcon /> Basic analytics dashboard</li>
          </ul>
        </div>

        {/* Standard Plan */}
        <div className="pricing-card growth">
        <div className="popular-badge">Popular</div>   {/* âœ… Popular Badge */}
        <div className="card-header">
            <GrowthLogo />
            <span className="plan-name">Growth</span>
        </div>
        <p className="plan-desc">Great for growing businesses scaling outreach.</p>
        <button className="choose-plan" onClick={handleContactClick}>Choose this plan</button>
        <p className="included-title">What's included:</p>
        <ul className="features-list">
            <li><CheckIcon /> 4-6 pre-qualified ICP/CXO meetings monthly</li>
            <li><CheckIcon /> High-value leads for quick wins</li>
            <li><CheckIcon /> CRM integration for efficiency</li>
            <li><CheckIcon /> Enhanced lead insights</li>
        </ul>
        </div>


        {/* Premium Plan */}
        <div className="pricing-card">
          <div className="card-header">
            <ScaleLogo />
            <span className="plan-name">Scale</span>
          </div>
          <p className="plan-desc">For enterprises driving maximum conversions.</p>
          <button className="choose-plan" onClick={handleContactClick}>Choose this plan</button>
          <p className="included-title">What's included:</p>
          <ul className="features-list">
            <li><CheckIcon /> 10 pre-qualified meetings with dedicated SDR</li>
            <li><CheckIcon /> Email, cold calls, and call recordings</li>
            <li><CheckIcon /> Advanced data security</li>
            <li><CheckIcon /> Detailed strategy reports</li>
            <li><CheckIcon /> Tailored onboarding</li>
          </ul>
        </div>

      </div>
    </section>
  );
};

const StarterLogo = () => (
 <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" viewBox="0 0 21 20" fill="none">
  <path d="M8.29631 15.6858C7.85588 16.6487 6.38615 18.8948 2.25627 18.8948C2.04907 18.8948 1.85036 18.8125 1.70384 18.6659C1.55733 18.5194 1.47502 18.3207 1.47502 18.1135C1.47502 13.9836 3.72111 12.5139 4.684 12.0735C4.77737 12.0309 4.8782 12.0071 4.98075 12.0035C5.0833 11.9999 5.18555 12.0165 5.28167 12.0525C5.3778 12.0884 5.46591 12.1429 5.54097 12.2128C5.61603 12.2828 5.67658 12.3668 5.71916 12.4602C5.76174 12.5536 5.78551 12.6544 5.78912 12.7569C5.79273 12.8595 5.7761 12.9617 5.74019 13.0579C5.70428 13.154 5.64979 13.2421 5.57983 13.3172C5.50987 13.3922 5.4258 13.4528 5.33244 13.4954C4.70451 13.7815 3.31877 14.7024 3.07463 17.2952C5.6674 17.051 6.59025 15.6653 6.87443 15.0373C6.91701 14.944 6.97756 14.8599 7.05262 14.79C7.12769 14.72 7.2158 14.6655 7.31192 14.6296C7.40804 14.5937 7.5103 14.5771 7.61285 14.5807C7.71539 14.5843 7.81623 14.6081 7.90959 14.6506C8.00295 14.6932 8.08701 14.7538 8.15697 14.8288C8.22694 14.9039 8.28143 14.992 8.31734 15.0881C8.35325 15.1842 8.36987 15.2865 8.36627 15.389C8.36266 15.4916 8.33889 15.5924 8.29631 15.6858ZM20.2104 1.62329C20.1872 1.24235 20.0255 0.883066 19.7556 0.61321C19.4857 0.343354 19.1265 0.181591 18.7455 0.158442C17.517 0.0851997 14.3774 0.197504 11.7729 2.802L6.94377 7.635C6.87125 7.70765 6.78513 7.76531 6.69032 7.80468C6.59552 7.84404 6.49389 7.86435 6.39124 7.86444C6.18392 7.86463 5.98502 7.78245 5.8383 7.63598C5.69158 7.48952 5.60905 7.29077 5.60886 7.08345C5.60868 6.87613 5.69086 6.67724 5.83732 6.53051L8.43108 3.93579C8.48537 3.88116 8.52232 3.81171 8.53725 3.73615C8.55219 3.66059 8.54446 3.5823 8.51503 3.51113C8.4856 3.43995 8.43578 3.37907 8.37185 3.33612C8.30791 3.29318 8.2327 3.27009 8.15568 3.26977H5.61076C5.40494 3.26869 5.20096 3.30853 5.01067 3.38699C4.82039 3.46545 4.6476 3.58096 4.50236 3.7268L1.15275 7.07836C0.947332 7.28365 0.803186 7.54212 0.736493 7.82477C0.6698 8.10742 0.6832 8.40306 0.775188 8.67852C0.867177 8.95398 1.03411 9.19835 1.25726 9.38421C1.48041 9.57006 1.75094 9.69005 2.0385 9.73071L5.79533 10.2551L10.1127 14.5725L10.6371 18.3313C10.6775 18.6189 10.7974 18.8894 10.9834 19.1124C11.1695 19.3353 11.4142 19.5018 11.6899 19.593C11.8504 19.6467 12.0186 19.674 12.1879 19.6741C12.3929 19.6745 12.5959 19.6343 12.7853 19.5558C12.9747 19.4774 13.1467 19.3622 13.2914 19.217L16.643 15.8674C16.7884 15.7219 16.9036 15.549 16.982 15.3588C17.0605 15.1686 17.1006 14.9648 17.1 14.759V12.2141C17.0999 12.1369 17.0769 12.0614 17.0339 11.9973C16.9909 11.9331 16.9298 11.8832 16.8585 11.8537C16.7871 11.8242 16.7086 11.8166 16.6329 11.8317C16.5571 11.8468 16.4876 11.8841 16.433 11.9387L13.8383 14.5325C13.7624 14.6084 13.6717 14.6679 13.5718 14.7073C13.4718 14.7466 13.3649 14.7649 13.2576 14.7611C13.1503 14.7572 13.0449 14.7313 12.9481 14.6849C12.8512 14.6385 12.765 14.5727 12.6947 14.4915C12.5666 14.3364 12.5015 14.1389 12.5123 13.938C12.5232 13.7372 12.6092 13.5478 12.7533 13.4075L17.5649 8.59594C20.1713 5.99047 20.2836 2.85082 20.2104 1.62133V1.62329Z" fill="#CCCCCC"/>
 </svg>
);

const GrowthLogo = () => (
 <svg xmlns="http://www.w3.org/2000/svg" width="19" height="25" viewBox="0 0 19 25" fill="none">
  <path d="M17.8938 12.2715L6.95627 23.9902C6.84036 24.1139 6.68737 24.1966 6.52037 24.2257C6.35338 24.2548 6.18144 24.2288 6.03051 24.1516C5.87959 24.0745 5.75785 23.9503 5.68368 23.7979C5.60952 23.6454 5.58694 23.473 5.61936 23.3066L7.051 16.1455L1.42307 14.0322C1.3022 13.987 1.19441 13.9126 1.10934 13.8155C1.02426 13.7185 0.964552 13.6019 0.935534 13.4762C0.906517 13.3504 0.909099 13.2194 0.943051 13.0949C0.977002 12.9704 1.04126 12.8563 1.1301 12.7627L12.0676 1.04394C12.1835 0.920242 12.3365 0.837601 12.5035 0.808486C12.6705 0.77937 12.8424 0.80536 12.9934 0.882533C13.1443 0.959706 13.266 1.08388 13.3402 1.2363C13.4144 1.38873 13.4369 1.56115 13.4045 1.72753L11.969 8.89648L17.5969 11.0068C17.7169 11.0523 17.8238 11.1267 17.9082 11.2234C17.9926 11.32 18.0519 11.436 18.0809 11.561C18.1098 11.686 18.1076 11.8162 18.0742 11.9401C18.0409 12.064 17.9776 12.1778 17.8899 12.2715H17.8938Z" fill="#CCCCCC"/>
 </svg>
);

const ScaleLogo = () => (
 <svg xmlns="http://www.w3.org/2000/svg" width="23" height="19" viewBox="0 0 23 19" fill="none">
  <path d="M22.403 6.88777C22.403 6.89852 22.403 6.90828 22.3962 6.91902L20.1813 17.0626C20.1132 17.4198 19.9225 17.742 19.6423 17.9737C19.3621 18.2055 19.0098 18.3322 18.6462 18.3321H4.33271C3.96925 18.332 3.6172 18.2051 3.33718 17.9734C3.05716 17.7417 2.86668 17.4196 2.79853 17.0626L0.583687 6.91902C0.583687 6.90828 0.578804 6.89852 0.576851 6.88777C0.516233 6.55194 0.567233 6.20549 0.722058 5.90136C0.876883 5.59724 1.12702 5.35216 1.43424 5.20359C1.74147 5.05501 2.08889 5.0111 2.42342 5.07858C2.75795 5.14605 3.06119 5.32118 3.28681 5.57723L6.5749 9.12117L10.071 1.28035C10.0712 1.2771 10.0712 1.27384 10.071 1.27059C10.196 0.999441 10.3961 0.769791 10.6476 0.608822C10.899 0.447853 11.1914 0.362305 11.4899 0.362305C11.7885 0.362305 12.0808 0.447853 12.3323 0.608822C12.5838 0.769791 12.7839 0.999441 12.9089 1.27059C12.9087 1.27384 12.9087 1.2771 12.9089 1.28035L16.405 9.12117L19.6931 5.57723C19.9191 5.32308 20.222 5.14966 20.5556 5.08329C20.8892 5.01692 21.2354 5.06123 21.5415 5.2095C21.8477 5.35776 22.0971 5.60188 22.2518 5.90478C22.4066 6.20768 22.4583 6.55281 22.3991 6.88777H22.403Z" fill="#CCCCCC"/>
 </svg>
);

const CheckIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="17" height="13" viewBox="0 0 17 13" fill="none">
   <path d="M16.5133 2.23297L6.51328 12.233C6.42619 12.3204 6.32269 12.3897 6.20874 12.437C6.09478 12.4844 5.97261 12.5087 5.84922 12.5087C5.72583 12.5087 5.60366 12.4844 5.4897 12.437C5.37575 12.3897 5.27226 12.3204 5.18516 12.233L0.810159 7.85797C0.722953 7.77077 0.653777 7.66724 0.606582 7.5533C0.559386 7.43936 0.535095 7.31724 0.535095 7.19391C0.535095 7.07058 0.559386 6.94846 0.606582 6.83452C0.653777 6.72058 0.722953 6.61706 0.810159 6.52985C0.897365 6.44264 1.00089 6.37347 1.11483 6.32627C1.22877 6.27908 1.35089 6.25478 1.47422 6.25478C1.59755 6.25479 1.71967 6.27908 1.83361 6.32627C1.94755 6.37347 2.05108 6.44264 2.13828 6.52985L5.85 10.2416L15.1867 0.906411C15.3628 0.730291 15.6017 0.631348 15.8508 0.631348C16.0999 0.631348 16.3387 0.730291 16.5148 0.906411C16.691 1.08253 16.7899 1.3214 16.7899 1.57047C16.7899 1.81955 16.691 2.05842 16.5148 2.23454L16.5133 2.23297Z" fill="white"/>
  </svg>
);

export default Pricing;
